//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.4927
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 


/// <remarks/>
// CODEGEN: Необязательный элемент расширения WSDL "PolicyReference" из пространства имен "http://schemas.xmlsoap.org/ws/2004/09/policy" не был обработан.
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="TelemetryServiceSoapBinding", Namespace="http://webservice.telemetry.udo.fors.ru/")]
public partial class TelemetryService : Microsoft.Web.Services3.WebServicesClientProtocol {
    
    private System.Threading.SendOrPostCallback testServiceOperationCompleted;
    
    private System.Threading.SendOrPostCallback storeTelemetryListOperationCompleted;
    
    private System.Threading.SendOrPostCallback storeTelemetryOperationCompleted;
    
    /// <remarks/>
    public TelemetryService() {
        this.Url = "http://ods.mos.ru:80/telemetry/telemetryWebService";
    }
    
    /// <remarks/>
    public event testServiceCompletedEventHandler testServiceCompleted;
    
    /// <remarks/>
    public event storeTelemetryListCompletedEventHandler storeTelemetryListCompleted;
    
    /// <remarks/>
    public event storeTelemetryCompletedEventHandler storeTelemetryCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.telemetry.udo.fors.ru/", ResponseNamespace="http://webservice.telemetry.udo.fors.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void testService([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int a, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool aSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int b, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool bSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out int result, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool resultSpecified) {
        object[] results = this.Invoke("testService", new object[] {
                    a,
                    aSpecified,
                    b,
                    bSpecified});
        result = ((int)(results[0]));
        resultSpecified = ((bool)(results[1]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegintestService(int a, bool aSpecified, int b, bool bSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("testService", new object[] {
                    a,
                    aSpecified,
                    b,
                    bSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndtestService(System.IAsyncResult asyncResult, out int result, out bool resultSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        result = ((int)(results[0]));
        resultSpecified = ((bool)(results[1]));
    }
    
    /// <remarks/>
    public void testServiceAsync(int a, bool aSpecified, int b, bool bSpecified) {
        this.testServiceAsync(a, aSpecified, b, bSpecified, null);
    }
    
    /// <remarks/>
    public void testServiceAsync(int a, bool aSpecified, int b, bool bSpecified, object userState) {
        if ((this.testServiceOperationCompleted == null)) {
            this.testServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestServiceOperationCompleted);
        }
        this.InvokeAsync("testService", new object[] {
                    a,
                    aSpecified,
                    b,
                    bSpecified}, this.testServiceOperationCompleted, userState);
    }
    
    private void OntestServiceOperationCompleted(object arg) {
        if ((this.testServiceCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.testServiceCompleted(this, new testServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.telemetry.udo.fors.ru/", ResponseNamespace="http://webservice.telemetry.udo.fors.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void storeTelemetryList([System.Xml.Serialization.XmlElementAttribute("telemetryWithDetails", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] telemetryWithDetails[] telemetryWithDetails) {
        this.Invoke("storeTelemetryList", new object[] {
                    telemetryWithDetails});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginstoreTelemetryList(telemetryWithDetails[] telemetryWithDetails, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("storeTelemetryList", new object[] {
                    telemetryWithDetails}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndstoreTelemetryList(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void storeTelemetryListAsync(telemetryWithDetails[] telemetryWithDetails) {
        this.storeTelemetryListAsync(telemetryWithDetails, null);
    }
    
    /// <remarks/>
    public void storeTelemetryListAsync(telemetryWithDetails[] telemetryWithDetails, object userState) {
        if ((this.storeTelemetryListOperationCompleted == null)) {
            this.storeTelemetryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstoreTelemetryListOperationCompleted);
        }
        this.InvokeAsync("storeTelemetryList", new object[] {
                    telemetryWithDetails}, this.storeTelemetryListOperationCompleted, userState);
    }
    
    private void OnstoreTelemetryListOperationCompleted(object arg) {
        if ((this.storeTelemetryListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.storeTelemetryListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.telemetry.udo.fors.ru/", ResponseNamespace="http://webservice.telemetry.udo.fors.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void storeTelemetry([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] telemetryBa telemetry, [System.Xml.Serialization.XmlElementAttribute("telemetryDetails", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] telemetryDetailBa[] telemetryDetails) {
        this.Invoke("storeTelemetry", new object[] {
                    telemetry,
                    telemetryDetails});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginstoreTelemetry(telemetryBa telemetry, telemetryDetailBa[] telemetryDetails, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("storeTelemetry", new object[] {
                    telemetry,
                    telemetryDetails}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndstoreTelemetry(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void storeTelemetryAsync(telemetryBa telemetry, telemetryDetailBa[] telemetryDetails) {
        this.storeTelemetryAsync(telemetry, telemetryDetails, null);
    }
    
    /// <remarks/>
    public void storeTelemetryAsync(telemetryBa telemetry, telemetryDetailBa[] telemetryDetails, object userState) {
        if ((this.storeTelemetryOperationCompleted == null)) {
            this.storeTelemetryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstoreTelemetryOperationCompleted);
        }
        this.InvokeAsync("storeTelemetry", new object[] {
                    telemetry,
                    telemetryDetails}, this.storeTelemetryOperationCompleted, userState);
    }
    
    private void OnstoreTelemetryOperationCompleted(object arg) {
        if ((this.storeTelemetryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.storeTelemetryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.telemetry.udo.fors.ru/")]
public partial class telemetryWithDetails {
    
    private telemetryBa telemetryField;
    
    private telemetryDetailBa[] telemetryDetailsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public telemetryBa telemetry {
        get {
            return this.telemetryField;
        }
        set {
            this.telemetryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("telemetryDetails", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public telemetryDetailBa[] telemetryDetails {
        get {
            return this.telemetryDetailsField;
        }
        set {
            this.telemetryDetailsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.telemetry.udo.fors.ru/")]
public partial class telemetryBa {
    
    private double coordXField;
    
    private double coordYField;
    
    private System.DateTime dateField;
    
    private bool glonassField;
    
    private string gpsCodeField;
    
    private double speedField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public double coordX {
        get {
            return this.coordXField;
        }
        set {
            this.coordXField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public double coordY {
        get {
            return this.coordYField;
        }
        set {
            this.coordYField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public System.DateTime date {
        get {
            return this.dateField;
        }
        set {
            this.dateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool glonass {
        get {
            return this.glonassField;
        }
        set {
            this.glonassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string gpsCode {
        get {
            return this.gpsCodeField;
        }
        set {
            this.gpsCodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public double speed {
        get {
            return this.speedField;
        }
        set {
            this.speedField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.telemetry.udo.fors.ru/")]
public partial class telemetryDetailBa {
    
    private string sensorCodeField;
    
    private double valueField;
    
    private bool valueFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string sensorCode {
        get {
            return this.sensorCodeField;
        }
        set {
            this.sensorCodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public double value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool valueSpecified {
        get {
            return this.valueFieldSpecified;
        }
        set {
            this.valueFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void testServiceCompletedEventHandler(object sender, testServiceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class testServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal testServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool resultSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void storeTelemetryListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void storeTelemetryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
