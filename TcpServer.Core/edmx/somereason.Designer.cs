//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace TcpServer.Core.edmx
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class somereasonEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект somereasonEntities, используя строку соединения из раздела "somereasonEntities" файла конфигурации приложения.
        /// </summary>
        public somereasonEntities() : base("name=somereasonEntities", "somereasonEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта somereasonEntities.
        /// </summary>
        public somereasonEntities(string connectionString) : base(connectionString, "somereasonEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта somereasonEntities.
        /// </summary>
        public somereasonEntities(EntityConnection connection) : base(connection, "somereasonEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<block_info> block_info
        {
            get
            {
                if ((_block_info == null))
                {
                    _block_info = base.CreateObjectSet<block_info>("block_info");
                }
                return _block_info;
            }
        }
        private ObjectSet<block_info> _block_info;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet block_info. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToblock_info(block_info block_info)
        {
            base.AddObject("block_info", block_info);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="somereasonModel", Name="block_info")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class block_info : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта block_info.
        /// </summary>
        /// <param name="imei">Исходное значение свойства imei.</param>
        /// <param name="info">Исходное значение свойства info.</param>
        /// <param name="arrived">Исходное значение свойства arrived.</param>
        public static block_info Createblock_info(global::System.String imei, global::System.String info, global::System.DateTime arrived)
        {
            block_info block_info = new block_info();
            block_info.imei = imei;
            block_info.info = info;
            block_info.arrived = arrived;
            return block_info;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String imei
        {
            get
            {
                return _imei;
            }
            set
            {
                if (_imei != value)
                {
                    OnimeiChanging(value);
                    ReportPropertyChanging("imei");
                    _imei = StructuralObject.SetValidValue(value, false, "imei");
                    ReportPropertyChanged("imei");
                    OnimeiChanged();
                }
            }
        }
        private global::System.String _imei;
        partial void OnimeiChanging(global::System.String value);
        partial void OnimeiChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String info
        {
            get
            {
                return _info;
            }
            set
            {
                OninfoChanging(value);
                ReportPropertyChanging("info");
                _info = StructuralObject.SetValidValue(value, false, "info");
                ReportPropertyChanged("info");
                OninfoChanged();
            }
        }
        private global::System.String _info;
        partial void OninfoChanging(global::System.String value);
        partial void OninfoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime arrived
        {
            get
            {
                return _arrived;
            }
            set
            {
                OnarrivedChanging(value);
                ReportPropertyChanging("arrived");
                _arrived = StructuralObject.SetValidValue(value, "arrived");
                ReportPropertyChanged("arrived");
                OnarrivedChanged();
            }
        }
        private global::System.DateTime _arrived;
        partial void OnarrivedChanging(global::System.DateTime value);
        partial void OnarrivedChanged();

        #endregion

    }

    #endregion

}
